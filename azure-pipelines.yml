trigger:
  branches:
    include:
      - main
  paths:
    include:
      - site/**
      - api/**
      - infra/**

stages:
  - stage: site
    displayName: "Frontend"
    condition: |
      and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'), or(contains(variables['Build.Reason'], 'Manual'), contains(variables['Build.ChangedFiles'], 'site/')))
    jobs:
      - job: build_site

        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: Npm@1
            inputs:
              command: "install"

          - task: Npm@1
            inputs:
              command: "custom"
              workingDir: "/site"
              customCommand: "run build"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "/site/dist"
              ArtifactName: "drop"
              publishLocation: "Container"

      - job: deploy_site

        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: "drop"
              targetPath: "$(Pipeline.Workspace)/drop"

          - task: CopyFilesOverSSH@0
            inputs:
              sshEndpoint: "ssh-azure-vm"
              contents: "$(Pipeline.Workspace)/drop/**"
              targetFolder: "/root/site"
              readyTimeout: "20000"

  - stage: Backend
    displayName: "Backend Stage"
    condition: |
      and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'), or(contains(variables['Build.Reason'], 'Manual'), contains(variables['Build.ChangedFiles'], 'api/')))
    jobs:
      - job: BuildBackend
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - script: echo "Building Backend..."
            displayName: "Build Backend"

  - stage: Infra
    displayName: "Infrastructure Stage"
    condition: |
      and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'), or(contains(variables['Build.Reason'], 'Manual'), contains(variables['Build.ChangedFiles'], 'infra/')))
    jobs:
      - job: DeployInfra
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - script: echo "Deploying Infrastructure..."
            displayName: "Deploy Infrastructure"
