trigger:
  branches:
    include:
      - main
  # paths:
  #   include:
  #     - site/**
  #     - api/**
  #     - infra/**

pool:
  name: SelfHostedPool

variables:
  DB_CONNECTION_STRING: $(CONNECTION_STRING)

stages:
  - stage: site
    displayName: "frontend"
    jobs:
      - job: build_and_deploy_site

        steps:
          - checkout: self

          - task: Npm@1
            inputs:
              command: "install"
              workingDir: "$(System.DefaultWorkingDirectory)/site"
            displayName: "Install dependencies"

          - task: Npm@1
            inputs:
              command: "custom"
              workingDir: "$(System.DefaultWorkingDirectory)/site"
              customCommand: "run build"
            displayName: "Build site"

          - task: CopyFilesOverSSH@0
            inputs:
              sshEndpoint: "ssh-azure-vm"
              sourceFolder: "$(System.DefaultWorkingDirectory)/site/dist"
              contents: "**"
              targetFolder: "/home/azadmin/site"
              cleanTargetFolder: true
              cleanHiddenFilesInTarget: true
              failOnEmptySource: true
              readyTimeout: "20000"
            displayName: "Deploy site"

  - stage: api
    displayName: backend
    jobs:
      - job: build_and_deploy_api
        steps:
          - checkout: self

          - task: GoTool@0
            inputs:
              version: "1.23.2"
            displayName: "Install Go"

          - script: |
              sed 's|CONNECTION_STRING|$(DB_CONNECTION_STRING)|' -i api/main.go
            displayName: "Replace connection string"

          - script: |
              cd api/
              go mod tidy
            displayName: "Install dependencies"

          - script: |
              cd api/
              go build main.go
            displayName: "Build api"

          - task: CopyFilesOverSSH@0
            inputs:
              sshEndpoint: "ssh-do-vm"
              sourceFolder: "$(System.DefaultWorkingDirectory)/api/"
              contents: "main"
              targetFolder: "/root/api"
              cleanTargetFolder: true
              cleanHiddenFilesInTarget: true
              readyTimeout: "20000"
              failOnEmptySource: true
            displayName: "Deploy api"

  - stage: infra
    displayName: infra
    jobs:
      - job: deploy_infra
        displayName: "Deploy infrastructure"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.x"
            displayName: "Use Python 3"

          - script: |
              python -m pip install --upgrade pip
              pip install ansible
            displayName: "Install Ansible"

          - script: |
              ansible-playbook playbook.yml -i inventory.yml
            displayName: "Run Ansible Playbook"
